<!DOCTYPE html>
<html lang="en" ng-app="blackMarket">
<head>
  <meta charset="utf-8">
  <title><%= title %></title>
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <link rel="shortcut icon" href="favicon.png" />
  <link rel="stylesheet" type="text/css" href="/vendors/bootstrap/dist/css/bootstrap.min.css" />
  <link rel="stylesheet" type="text/css" href="/vendors/normalize.css/normalize.css" />
  <link rel="stylesheet" type="text/css" href="/css/styles.css" />

  <!-- <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular.min.js"></script>
  <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.3.14/angular-route.js"></script> -->
  <script type="text/javascript" src="https://www.google.com/jsapi"></script>
  <!-- <script src="js/ui-bootstrap-tpls-0.12.1.min.js"></script>
  <script src="js/ng-google-chart.js"></script>
  <script src="js/urf-controllers.js"></script>
  <script src="js/urf-angular.js"></script> -->
</head>
<body>
  <div class="background">
    <div class="dot"></div>
  </div>

  <nav class="navbar navbar-default">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#navbar-collapse-1">
          <span class="sr-only">Toggle navigation</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="/"><%= title %></a>
      </div>

      <div class="collapse navbar-collapse" id="navbar-collapse-1">
        <ul class="nav navbar-nav">
          <li><a href="#champions">Champions</a></li>
        </ul>
        <ul class="nav navbar-nav">
          <li><a href="#about">About</a></li>
        </ul>
      </div>
    </div>
  </nav>
  <div ng-view></div>

  <div
  class="fb-like"
  data-share="true"
  data-width="450"
  data-show-faces="true">
  </div>

  <!-- facebook boxed-->
  <div class="container">
    <div class="box">
      <div class="header"><a href="#">Awesome dude</a> Comment
        <div class="date">21. Januar 2015</div>
      </div>
      <div class="body">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.</div>
      <div class="links"><a href="#">Link</a></div>
      <div class="footer">This is a Footer</div>
    </div>
    <div class="box">
      <div class="header"><a href="#">Awesome dude</a> Comment
        <div class="date">21. Januar 2015</div>
      </div>
      <div class="body">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.</div>
      <div class="links"><a href="#">Link</a></div>
      <div class="footer">This is a Footer</div>
    </div>
    <div class="box blue">
      <div class="header"><a href="#">Awesome dude</a> Comment
        <div class="date">21. Januar 2015</div>
      </div>
      <div class="body">Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua.</div>
      <div class="links"><a href="#">Link</a></div>
      <div class="footer">This is a Footer</div>
    </div>
  </div>

  <!--
  Below we include the Login Button social plugin. This button uses
  the JavaScript SDK to present a graphical Login button that triggers
  the FB.login() function when clicked.
-->

<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
</fb:login-button>

<div id="status">
</div>

  <footer>
    <div class="row">
      <div class="col-lg-12">
        <p>Hello this is bullshit</p>
      </div>
    </div>
  </footer>

</body>
<script>
  window.fbAsyncInit = function() {
    FB.init({
      appId      : '1629239127356735',
      xfbml      : true,
      version    : 'v2.4'
    });
  };

  (function(d, s, id){
   var js, fjs = d.getElementsByTagName(s)[0];
   if (d.getElementById(id)) {return;}
   js = d.createElement(s); js.id = id;
   js.src = "//connect.facebook.net/en_US/sdk.js";
   fjs.parentNode.insertBefore(js, fjs);
 }(document, 'script', 'facebook-jssdk'));
</script>

<script>
  // This is called with the results from from FB.getLoginStatus().
  function statusChangeCallback(response) {
    console.log('statusChangeCallback');
    console.log(response);
    // The response object is returned with a status field that lets the
    // app know the current login status of the person.
    // Full docs on the response object can be found in the documentation
    // for FB.getLoginStatus().
    if (response.status === 'connected') {
      // Logged into your app and Facebook.
      testAPI();
    } else if (response.status === 'not_authorized') {
      // The person is logged into Facebook, but not your app.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into this app.';
    } else {
      // The person is not logged into Facebook, so we're not sure if
      // they are logged into this app or not.
      document.getElementById('status').innerHTML = 'Please log ' +
        'into Facebook.';
    }
  }

  // This function is called when someone finishes with the Login
  // Button.  See the onlogin handler attached to it in the sample
  // code below.
  function checkLoginState() {
    FB.getLoginStatus(function(response) {
      statusChangeCallback(response);
    });
  }

  // window.fbAsyncInit = function() {
  // FB.init({
  //   appId      : '{your-app-id}',
  //   cookie     : true,  // enable cookies to allow the server to access
  //                       // the session
  //   xfbml      : true,  // parse social plugins on this page
  //   version    : 'v2.2' // use version 2.2
  // });

  // Now that we've initialized the JavaScript SDK, we call
  // FB.getLoginStatus().  This function gets the state of the
  // person visiting this page and can return one of three states to
  // the callback you provide.  They can be:
  //
  // 1. Logged into your app ('connected')
  // 2. Logged into Facebook, but not your app ('not_authorized')
  // 3. Not logged into Facebook and can't tell if they are logged into
  //    your app or not.
  //
  // These three cases are handled in the callback function.

  FB.getLoginStatus(function(response) {
    statusChangeCallback(response);
  });

  };

  // Load the SDK asynchronously
  (function(d, s, id) {
    var js, fjs = d.getElementsByTagName(s)[0];
    if (d.getElementById(id)) return;
    js = d.createElement(s); js.id = id;
    js.src = "//connect.facebook.net/en_US/sdk.js";
    fjs.parentNode.insertBefore(js, fjs);
  }(document, 'script', 'facebook-jssdk'));

  // Here we run a very simple test of the Graph API after login is
  // successful.  See statusChangeCallback() for when this call is made.
  function testAPI() {
    console.log('Welcome!  Fetching your information.... ');
    FB.api('/me', function(response) {
      console.log('Successful login for: ' + response.name);
      document.getElementById('status').innerHTML =
        'Thanks for logging in, ' + response.name + '!';
    });
  }
</script>
</html>
